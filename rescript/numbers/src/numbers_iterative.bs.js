// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';


function fibonacci_iter(_n, acc2, _acc1) {
  while(true) {
    var acc1 = _acc1;
    var n = _n;
    switch (n) {
      case 0 :
          return 0;
      case 1 :
          return 1;
      case 2 :
          return acc1 + acc2 | 0;
      default:
        _acc1 = acc2 + acc1 | 0;
        _n = n - 1 | 0;
        continue ;
    }
  };
}

function fibonacci(n) {
  return fibonacci_iter(n, 0, 1);
}

function factorial_iter(_n, _acc) {
  while(true) {
    var acc = _acc;
    var n = _n;
    if (n === 1) {
      return acc;
    }
    _acc = Math.imul(n, acc);
    _n = n - 1 | 0;
    continue ;
  };
}

function factorial(n) {
  return factorial_iter(n, n);
}

function sum_numbers_iter(_n, _acc) {
  while(true) {
    var acc = _acc;
    var n = _n;
    if (n === 0) {
      return acc;
    }
    _acc = n + acc | 0;
    _n = n - 1 | 0;
    continue ;
  };
}

function sum_numbers(n) {
  return sum_numbers_iter(n, n);
}

exports.fibonacci_iter = fibonacci_iter;
exports.fibonacci = fibonacci;
exports.factorial_iter = factorial_iter;
exports.factorial = factorial;
exports.sum_numbers_iter = sum_numbers_iter;
exports.sum_numbers = sum_numbers;
/* No side effect */
